package com.lianlian.ew.open.response;

import com.lianlian.ew.open.domain.AdditionalInfo;
import com.lianlian.ew.open.domain.FxInfo;
import com.lianlian.ew.open.domain.PayeeBankInfo;
import com.lianlian.ew.open.domain.PaymentFee;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 * payout detail
 *
 * @author xujs002
 */
@Getter
@Setter
@ToString
public class PayoutDetailRes implements Serializable {

    private static final long serialVersionUID = 8540886649632636969L;

    /**
     * The user ID
     */
    private String userId;

    /**
     * ID of this Object
     */
    private String id;

    /**
     * The idempotent value generated by the client must be unique on each request.
     * payout requests with the same request_id will be rejected.
     * The parameter contains a maximum of 128 characters.
     */
    private String requestId;

    /**
     * Unique identifier of payee.
     */
    private String payeeId;

    /**
     * The bank info of payee
     */
    private PayeeBankInfo payeeBankInfo;

    /**
     * fee of payout
     */
    private PaymentFee fee;

    /**
     * conversion of payout
     */
    private FxInfo conversion;

    /**
     * purpose of payout
     */
    private String purpose;

    /**
     * The currency actually paid by the payer (in three-letter ISO 4217 format).
     */
    private String payCurrency;

    /**
     * The amount actually paid by the payer, main currency unit, rounded up to 2 decimal places.
     */
    private String payAmount;

    /**
     * Currency of payment to payee (in three-letter ISO 4217 format).
     */
    private String sendCurrency;

    /**
     * Amount paid to payee, main currency unit, rounded up to 2 decimal places.
     */
    private String sendAmount;

    /**
     * Return the funds to the payer's currency (in three-letter ISO 4217 format).
     */
    private String refundCurrency;

    /**
     * Return the funds to the payer's amount, main currency unit, rounded up to 2 decimal places.
     */
    private String refundAmount;

    /**
     * This field occurs when an error occurs during payment.
     */
    private String failureReason;

    /**
     * This field occurs when an error occurs during payment.
     */
    private String failureCode;

    /**
     * This is the postscript information visible to the payee.
     */
    private String reference;

    /**
     * The payout status
     * Allowed values:
     * PROCESSING
     * FAILED
     * CANCELLED
     * REFUNDING
     * REFUNDED
     * COMPLETED
     */
    private String status;

    /**
     * The payout refunded pre status
     * Allowed values:
     * PROCESSING
     * COMPLETED
     */
    private String refundedPreStatus;

    /**
     * Set of key-value pairs that you can attach the business information according to Lianlian's requirements
     */
    private List<AdditionalInfo> additionalInfo;

    /**
     * The object creation time. Measured in milliseconds since the Unix epoch.
     */
    private Date createTime;

    /**
     * Unique identification of required materials
     */
    private String fileId;
}
